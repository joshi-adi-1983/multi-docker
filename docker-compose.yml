version: "3.19"
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "3050:80"
    restart: always
  postgres:
    image: "postgres:latest"
    environment:
      #   POSTGRES_USER: postgres
      - POSTGRES_PASSWORD=postgres
    #   POSTGRES_DB: postgres
    # volumes:
    #   - ./data/postgres:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
    # restart: always
  redis:
    image: "redis:latest"
    # environment:
    #   REDIS_PASSWORD: redis
    # volumes:
    #   - ./data/redis:/data
    # ports:
    #   - "6379:6379"
    # restart: always
  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=postgres
      - PGPASSWORD=postgres
  client:
    stdin_open: true
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./client:/app
    # environment:
    #   - REDIS_HOST=redis
    #   - REDIS_PORT=6379
    #   - PGUSER=postgres
    #   - PGHOST=postgres
    #   - PGPORT=5432
    #   - PGDATABASE=postgres
    #   - PGPASSWORD=postgres_password
    # ports:
    #   - "8080:3000"
    # depends_on:
    #   - server
    # restart: always
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    #   - PGUSER=postgres
    #   - PGHOST=postgres
    #   - PGPORT=5432
    #   - PGDATABASE=postgres
    #   - PGPASSWORD=postgres_password
    # # ports:
    # #   - "8080:3000"
    # # depends_on:
    # #   - server
    # # restart: always
